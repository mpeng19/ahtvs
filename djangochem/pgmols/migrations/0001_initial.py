# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2016-04-12 14:46
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.postgres.fields
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0007_alter_validators_add_error_messages'),
        ('jobs', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Batch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('createtime', models.DateTimeField(default=django.utils.timezone.now, null=True)),
                ('announced', models.BooleanField(default=False)),
                ('creator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='batches', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Calc',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('props', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Geom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('xyz', django.contrib.postgres.fields.ArrayField(base_field=django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(), size=4), size=None)),
            ],
        ),
        migrations.CreateModel(
            name='Method',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.CharField(max_length=256, null=True)),
                ('details', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Mol',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inchikey', models.CharField(max_length=27, null=True)),
                ('smiles', models.CharField(max_length=1000)),
                ('nicknames', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=200), null=True, size=None)),
                ('mass', models.FloatField(null=True)),
                ('tags', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=200), null=True, size=None)),
                ('createtime', models.DateTimeField(default=django.utils.timezone.now, null=True)),
                ('details', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('batches', models.ManyToManyField(to='pgmols.Batch')),
                ('group', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='auth.Group')),
                ('parentjob', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='childmols', to='jobs.Job')),
                ('parents', models.ManyToManyField(related_name='children', to='pgmols.Mol')),
            ],
            options={
                'permissions': (('view_mol', 'View Mol'),),
            },
        ),
        migrations.CreateModel(
            name='MolGroupObjectPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pgmols.Mol')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth.Group')),
                ('permission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth.Permission')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MolUserObjectPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pgmols.Mol')),
                ('permission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth.Permission')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Reaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('props', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('products', models.ManyToManyField(related_name='productof', to='pgmols.Mol')),
                ('reactants', models.ManyToManyField(related_name='reactantto', to='pgmols.Mol')),
            ],
        ),
        migrations.AddField(
            model_name='geom',
            name='method',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='pgmols.Method'),
        ),
        migrations.AddField(
            model_name='geom',
            name='mol',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pgmols.Mol'),
        ),
        migrations.AddField(
            model_name='geom',
            name='parentjob',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='childgeoms', to='jobs.Job'),
        ),
        migrations.AddField(
            model_name='geom',
            name='parents',
            field=models.ManyToManyField(related_name='children', to='pgmols.Geom'),
        ),
        migrations.AddField(
            model_name='calc',
            name='geoms',
            field=models.ManyToManyField(to='pgmols.Geom'),
        ),
        migrations.AddField(
            model_name='calc',
            name='method',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pgmols.Method'),
        ),
        migrations.AddField(
            model_name='calc',
            name='mol',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='calcs', to='pgmols.Mol'),
        ),
        migrations.AddField(
            model_name='calc',
            name='parentjob',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='childcalcs', to='jobs.Job'),
        ),
        migrations.AddField(
            model_name='calc',
            name='parents',
            field=models.ManyToManyField(related_name='children', to='pgmols.Calc'),
        ),
        migrations.AlterUniqueTogether(
            name='moluserobjectpermission',
            unique_together=set([('user', 'permission', 'content_object')]),
        ),
        migrations.AlterUniqueTogether(
            name='molgroupobjectpermission',
            unique_together=set([('group', 'permission', 'content_object')]),
        ),
    ]
